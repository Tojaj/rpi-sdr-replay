#!/usr/bin/env python3

import sys
import os.path
import argparse

import bluedot

from rpi_sdr_replay import Replayer, ReplayerBluetoothUI, FREQUENCY


DESCRIPTION = "Raspberry Pi based bluetooth controlled radio signal replayer"
DEFAULT_DIR = "~/sdr-recordings"


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=DESCRIPTION)

    parser.add_argument(
        "-f",
        "--frequency",
        type=int,
        default=FREQUENCY,
        help="Set frequency in Hz for both RX & TX (Default: %(default)s)"
    )
    parser.add_argument(
        "-r",
        "--rx-frequency",
        default=None,
        help="Set RX frequency in Hz"
    )
    parser.add_argument(
        "-t",
        "--tx-frequency",
        default=None,
        help="Set TX frequency in Hz"
    )
    parser.add_argument(
        "-p",
        "--allow-pairing",
        action="store_true",
        default=False,
        help="Allow bluetooth pairing for the first 60sec after start"
    )
    parser.add_argument(
        "-d",
        "--dir",
        default=DEFAULT_DIR,
        help="Directory where to store the recordings"
    )

    args = parser.parse_args()

    # Check args

    args.dir = os.path.normpath(os.path.realpath(os.path.os.path.expanduser(args.dir)))

    if args.dir == os.path.normpath(os.path.realpath(os.path.os.path.expanduser(DEFAULT_DIR))):
        # Create the default destination directory
        if not os.path.exists(args.dir):
            os.mkdir(args.dir, mode=755)

    if not os.path.exists(args.dir):
        parser.error(f"The path '{args.dir} doesn't exist!'")
    if not os.path.isdir(args.dir):
        parser.error(f"The path '{args.dir}' is not a directory!")

    rx_freq = args.frequency
    tx_freq = args.frequency

    if args.rx_frequency is not None:
        if not args.rx_frequency.isdigit():
            parser.error(f"The '{args.rx_frequency}' is not an integer number")
        rx_freq = int(args.rx_frequency)

    if args.tx_frequency is not None:
        if not args.tx_frequency.isdigit():
            parser.error(f"The '{args.tx_frequency}' is not an integer number")
        tx_freq = int(args.tx_frequency)

    try:
        bd = bluedot.BlueDot()
    except Exception as err:
        print(f"Cannot setup a bluetooth server: {err}")
        sys.exit(1)

    replayer = Replayer(args.dir, rx_freq, tx_freq)
    ui = ReplayerBluetoothUI(replayer, bd, args.allow_pairing)
    ui.run()
